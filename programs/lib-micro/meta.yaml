metadata:
  name: lib-micro
  summary: A portable set of microbenchmarks focused on the syscall and system library
    interfaces.
  description: |-
    Originally made open source in 2005 by Bart Smaalders and Phil Harman
    of Sun Microsystems (1) as part of their "if Linux is faster it's a
    Solaris bug" campaign. The code mostly "just works" but has atrophied
    slightly over the years.

    This is a fork by Ryan Zezeski, not be confused with Peter Portante's
    "fork" (2), which has seen no development. Starting source pulled
    from the java.net projects page (3). My intentions are to squash bugs,
    add missing syscalls, and make sure this works on as many platforms as
    possible. I also plan to document everythingâ€”extensively.

    (1) https://blogs.oracle.com/barts/entry/libmicro_opensourced

    (2) https://github.com/portante/libMicro

    (3) https://java.net/projects/libmicro
  homepage: https://github.com/rzezeski/libMicro
type: workload
depends: {}
params:
  test:
    values:
    - fast
    - all
    - getpid
    - getenv
    - clock_gettime
    - gettimeofday
    - log
    - exp
    - lrand48
    - memset
    - memrand
    - cachetocache
    - isatty
    - malloc
    - close
    - memcpy
    - strcpy
    - strlen
    - strchr
    - strcmp
    - strcasecmp
    - strtol
    - getcontext
    - setcontext
    - mutex
    - longjmp
    - siglongjmp
    - getrusage
    - times
    - time
    - localtime_r
    - strftime
    - mktime
    - cascade_mutex
    - cascade_cond
    - cascade_lockf
    - cascade_flock
    - cascade_fcntl
    - file_lock
    - getsockname
    - getpeername
    - chdir
    - realpath
    - stat
    - fcntl
    - fcntl_ndelay
    - lseek
    - open
    - dup
    - socket
    - socketpair
    - setsockopt
    - bind
    - listen
    - connection
    - poll
    - select
    - semop
    - sigaction
    - signal
    - sigprocmask
    - pthread_create
    - fork
    - exit
    - exec
    - system
    - recurse
    - read
    - write
    - writev
    - pread
    - pwrite
    - mmap
    - munmap
    - connection
    - mprotect
    - pipe
    - close_tcp
  nr_task:
  samples:
results:
  getpid:
  getenv:
  getenvT2:
  clock_MONOTONIC:
  clock_PROCESS:
  clock_REALTIME:
  clock_THREAD:
  gettimeofday:
  log:
  exp:
  lrand48:
  memset_10:
  memset_256:
  memset_256_u:
  memset_1k:
  memset_4k:
  memset_4k_uc:
  memset_10k:
  memset_1m:
  memset_10m:
  memsetP2_10m:
  memrand:
  isatty_yes:
  isatty_no:
  malloc_10:
  malloc_100:
  malloc_1k:
  malloc_10k:
  malloc_100k:
  mallocT2_10:
  mallocT2_100:
  mallocT2_1k:
  mallocT2_10k:
  mallocT2_100k:
  close_bad:
  close_tmp:
  close_usr:
  close_zero:
  memcpy_10:
  memcpy_1k:
  memcpy_10k:
  memcpy_1m:
  memcpy_10m:
  strcpy_10:
  strcpy_1k:
  strlen_10:
  strlen_1k:
  strchr_10:
  strchr_1k:
  strcmp_10:
  strcmp_1k:
  scasecmp_10:
  scasecmp_1k:
  strtol:
  getcontext:
  setcontext:
  mutex_st:
  mutex_mt:
  mutex_T2:
  longjmp:
  siglongjmp:
  getrusage:
  times:
  time:
  localtime_r:
  strftime:
  mktime:
  mktimeT2:
  c_mutex_1:
  c_mutex_10:
  c_mutex_200:
  c_cond_1:
  c_cond_10:
  c_cond_200:
  c_lockf_1:
  c_lockf_10:
  c_lockf_200:
  c_flock:
  c_flock_10:
  c_flock_200:
  c_fcntl_1:
  c_fcntl_10:
  c_fcntl_200:
  file_lock:
  getsockname:
  getpeername:
  chdir_tmp:
  chdir_usr:
  chgetwd_tmp:
  chgetwd_usr:
  realpath_tmp:
  realpath_usr:
  stat_tmp:
  stat_usr:
  fcntl_tmp:
  fcntl_usr:
  fcntl_ndelay:
  lseek_t8k:
  lseek_u8k:
  open_tmp:
  open_usr:
  open_zero:
  dup:
  socket_u:
  socket_i:
  socketpair:
  setsockopt:
  bind:
  listen:
  connection:
  poll_10:
  poll_100:
  poll_1000:
  poll_w10:
  poll_w100:
  poll_w1000:
  select_10:
  select_100:
  select_1000:
  select_w10:
  select_w100:
  select_w1000:
  semop:
  sigaction:
  signal:
  sigprocmask:
  pthread:
  fork_10:
  fork_100:
  fork_1000:
  exit_10:
  exit_100:
  exit_1000:
  exit_10_nolibc:
  exec:
  system:
  recurse:
  read_t1k:
  read_t10k:
  read_t100k:
  read_u1k:
  read_u10k:
  read_u100k:
  read_z1k:
  read_z10k:
  read_z100k:
  read_zw100k:
  write_t1k:
  write_t10k:
  write_t100k:
  write_u1k:
  write_u10k:
  write_u100k:
  write_n1k:
  write_n10k:
  write_n100k:
  writev_t1k:
  writev_t10k:
  writev_t100k:
  writev_u1k:
  writev_u10k:
  writev_u100k:
  writev_n1k:
  writev_n10k:
  writev_n100k:
  pread_t1k:
  pread_t10k:
  pread_t100k:
  pread_u1k:
  pread_u10k:
  pread_u100k:
  pread_z1k:
  pread_z10k:
  pread_z100k:
  pread_zw100k:
  pwrite_t1k:
  pwrite_t10k:
  pwrite_t100k:
  pwrite_u1k:
  pwrite_u10k:
  pwrite_u100k:
  pwrite_n1k:
  pwrite_n10k:
  pwrite_n100k:
  mmap_z8k:
  mmap_z128k:
  mmap_t8k:
  mmap_t128k:
  mmap_u8k:
  mmap_u128k:
  mmap_a8k:
  mmap_a128k:
  mmap_rz8k:
  mmap_rz128k:
  mmap_rt8k:
  mmap_rt128k:
  mmap_ru8k:
  mmap_ru128k:
  mmap_ra8k:
  mmap_ra128k:
  mmap_wz8k:
  mmap_wz128k:
  mmap_wt8k:
  mmap_wt128k:
  mmap_wu8k:
  mmap_wu128k:
  mmap_wa8k:
  mmap_wa128k:
  unmap_z8k:
  unmap_z128k:
  unmap_t8k:
  unmap_t128k:
  unmap_u8k:
  unmap_u128k:
  unmap_a8k:
  unmap_a128k:
  unmap_rz8k:
  unmap_rz128k:
  unmap_rt8k:
  unmap_rt128k:
  unmap_ru8k:
  unmap_ru128k:
  unmap_ra8k:
  unmap_ra128k:
  conn_connect:
  unmap_wz8k:
  unmap_wz128k:
  unmap_wt8k:
  unmap_wt128k:
  unmap_wu8k:
  unmap_wu128k:
  unmap_wa8k:
  unmap_wa128k:
  mprot_z8k:
  mprot_z128k:
  mprot_wz8k:
  mprot_wz128k:
  mprot_twz8k:
  mprot_tw128k:
  mprot_tw4m:
  pipe_pst1:
  pipe_pmt1:
  pipe_pmp1:
  pipe_pst4k:
  pipe_pmt4k:
  pipe_pmp4k:
  pipe_sst1:
  pipe_smt1:
  pipe_smp1:
  pipe_sst4k:
  pipe_smt4k:
  pipe_smp4k:
  pipe_tst1:
  pipe_tmt1:
  pipe_tmp1:
  pipe_tst4k:
  pipe_tmt4k:
  pipe_tmp4k:
  conn_accept:
  close_tcp:
  total_elasped_time:
