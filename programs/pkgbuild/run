#!/bin/bash
# Parameters:
# - repository
# - PKGBUILD

# We'll use the below global env vars, but not treat them as parameters to avoid
# duplicates in result path like /openeuler-20.03-aarch64/openeuler-aarch64-cifs-2003/
# os
# os_arch
# os_version
# os_mount

## makepkg is a script that automates the building of packages; it can download and validate source files,
## check dependencies, configure build-time settings, compile the sources, install into a temporary root,
## make customizations, generate meta-info, and package everything together.
## See: https://wiki.archlinux.org/index.php/Makepkg

. $LKP_SRC/lib/debug.sh
. $LKP_SRC/distro/common
. $LKP_SRC/lib/http.sh
. $LKP_SRC/lib/upload.sh

check_vars()
{
	[ -n "$os" ]			|| die "os is empty"
	[ -n "$os_arch" ]		|| die "os_arch is empty"
	[ -n "$os_version" ]		|| die "os_version is empty"
	[ -n "$os_mount" ]		|| die "os_mount is empty"

	[ -n "$repository" ]		|| die "repository is empty"
	[ -n "$PKGBUILD" ]		|| die "PKGBUILD is empty"
}

# TODO: how to install: gzip -dc $upstream_commit.cgz | cpio -id --quiet

mount_dest()
{
	# the same image is mounted to cifs and nfs, the generated cgz files
	# are stored in the nfs directory.
	[[ "$os_mount" = "cifs" ]] && os_mount="nfs"
	pack_to=${os_mount}/${os}/${os_arch}/${os_version}

	PKG_MNT=/initrd/pkg
	mkdir -p "$PKG_MNT"
}

download_pkg()
{
    cd "$TMP" || die "no such directory: $TMP"
    wget -q "$PKGBUILD" -O PKGBUILD
}

build_source_pkg()
{
	cgz_dir="$PKG_MNT/${pack_to}/${repository##*/}"
  mkdir -p "$cgz_dir"

	local mark="true"
	pkg_args="-A --check --skippgpcheck --rewritegitserver"
	[ "${os}" == "archlinux" ] && {
    local mark="pacman"
    pkg_args="${pkg_args} -s --needed --noconfirm"
  }

 download_pkg
 builddir="/pkgbuild"
 mkdir $builddir
	export V=1
	PACMAN="${mark}" BUILDDIR="$builddir" CARCH=$os_arch PKGEXT=.cgz CGZ_DIR="$cgz_dir" PACKAGER="programs/pkgbuild" \
		$LKP_SRC/sbin/makepkg ${pkg_args} --config $LKP_SRC/etc/makepkg.conf

	local build_state="$?"

	[ "${build_state}" == "0" ] || exit 1

  if [[ "${repository##*/}" == "linux" ]]; then
    cgz_path="$(find "$cgz_dir" -type f -name "linux-*")"

    cd "$(dirname $cgz_path)"
    gzip -dc "$cgz_path" | cpio -id

    image_path="$(find "$cgz_dir" -type f -name "vmlinuz-*")"
    plan_set_kernel "$id$image_path"
    upload_to_target_dir "$cgz_dir"
  else
    upload_to_target_dir "$cgz_dir"
    for cgz in "$cgz_dir"/*; do
      plan_append_packages "$id${cgz}"
    done
  fi
}

check_vars
mount_dest
build_source_pkg
