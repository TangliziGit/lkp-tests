#!/bin/sh

# for packages with same dependencies, force the update instead of generating link
# due to schedule stage will auto detect symbolic link, so no need generate new link
check_shared_package()
{
	local bm_name="$1"

	[[ -L "$LKP_SRC/distro/depends/$bm_name" ]] || return

	local target
	target=$(readlink $LKP_SRC/distro/depends/$bm_name)
	target=$(basename $target)

	BM_NAME="$target"
}

show_deps_list()
{
	local denylist="^pack-deps$
-dev$
-allowlist$"

	find $LKP_SRC/distro/depends/ -type f | sed 's:.*/::' | grep -v "$denylist"
}

show_pack_list()
{
	local tmp_input="$(mktemp /tmp/lkp-tmpinput-XXXXXXXXX)"
	for i in monitors setup tests daemon
	do
		find $LKP_SRC/$i -type f -or -type l | sed 's:.*/::' >> $tmp_input
	done
	find  $LKP_SRC/pack -type f | sed 's:.*/::' |
	grep -x -F -f $tmp_input |
	grep -v -e '^0day-'
	rm $tmp_input &>/dev/null
}

install_runtime_depends()
{
	:
}

update()
{
	:
}

fixup_distro_mirror()
{
	:
}

fixup_preinstall()
{
	:
}

fixup_arch_install()
{
	:
}

pack_benchmark_deps()
{
	:
}

add_i386_package()
{
	:
}

share_debian_package()
{
	[[ "$os" = "debian" ]] && return
	grep -qFx "$benchmark" $LKP_SRC/distro/depends/share-debian || return

	ln -sf ../../../../${os_mount}/debian/${os_arch}/sid/${benchmark}.cgz ${pack_to}/${benchmark}.cgz

	exit 0
}
