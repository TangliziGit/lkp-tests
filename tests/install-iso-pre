#!/bin/bash
# SPDX-License-Identifier: MulanPSL-2.0+
# Copyright (c) 2020 Huawei Technologies Co., Ltd. All rights reserved.

set -e

. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/log.sh

check_params()
{
	log_info "start check params"

	local required_vars=(
		"iso_os"
		"iso_arch"
		"iso_version"
		"ROOTFS_SUFFIX"
		"VG_NAME"

		"HTTP_SERVER_HOST"
		"HTTP_SERVER_PORT"
		"HTTP_ROOT_DIR"
		"ROOTFS_ROOT_PASSWD"
		"rootfs_disk"

		"RSYNC_SERVER_HOST"
		"RSYNC_SERVER_PORT"
		"TFTP_SERVER_HOST"
		"NFS_SERVER_HOST"
		"NFS_ROOT_DIR"

		"LAB_Z9_URL"
		"MY_TOKEN"
	)

	for i in "${required_vars[@]}"
	do
		[ -n "$(eval echo \$$i)" ] || die "cannot get value of var: $i"
	done
}

create_vg()
{
	log_info "start create vg:$VG_NAME"

	local disk

	for disk in "${rootfs_disk[@]}"
	do
		log_info "start handle disk: $disk"
		pvdisplay ${disk} > /dev/null || pvcreate ${disk} || die "create pv failed: $disk"

		if vgdisplay ${VG_NAME} > /dev/null; then
			vgextend ${VG_NAME} ${disk}
		else
			vgcreate ${VG_NAME} ${disk}
		fi
	done

}

create_lv()
{
	log_info "start create lv:$LV_NAME"

	lvcreate -y -L 10G -n ${LV_NAME} ${VG_NAME} || die "create logical volume failed."
}

prepare_lv()
{
	log_info "start prepare logical volume"

	# activate lvm
	vgchange -ay

	# VG_NAME defines in job.yaml
	export VG_NAME
	export LV_NAME="${iso_os}_${iso_arch}_${iso_version}_${ROOTFS_SUFFIX}"

	# lv existed
	lvdisplay /dev/mapper/${VG_NAME}-${LV_NAME} > /dev/null && {
		log_info "iso already install to this testbox, so rootfs maybe already generated ok. please check it."
		exit 0
	}

	# lv not existed
	vgdisplay ${VG_NAME} > /dev/null || create_vg
	create_lv
}

prepare_ks()
{
	:
}

prepare_submit()
{
	:
}

submit_install_iso_yaml()
{
	:
}

submit_install_iso_firstboot_yaml()
{
	:
}

submit_install_iso_sync_rootfs_yaml()
{
	:
}

main()
{
	check_params

	prepare_lv
	prepare_ks
	prepare_submit

	submit_install_iso_yaml
	submit_install_iso_firstboot_yaml
	submit_install_iso_sync_rootfs_yaml
}

main
