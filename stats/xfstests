#!/usr/bin/env ruby

LKP_SRC = ENV['LKP_SRC'] || File.dirname(File.dirname(File.realpath($PROGRAM_NAME)))

require "#{LKP_SRC}/lib/string_ext"
require "#{LKP_SRC}/lib/log"
require "#{LKP_SRC}/lib/tests/stats"

stats = LKP::Stats.new

# udf/102 - output mismatch (see /lkp/benchmarks/xfstests/results//udf/102.out.bad)
TEST_PATTERN = '(generic|ext4|xfs|btrfs|udf|ocfs2|cifs)\/(\d\d\d)'.freeze

while (line = $stdin.gets)
  line = line.resolve_invalid_bytes

  case line
  when /^#{TEST_PATTERN}\s+\[failed, /, # btrfs/005 [failed, exit status 1]- output mismatch (see /lkp/benchmarks/xfstests/results//btrfs/005.out.bad)
       /^#{TEST_PATTERN}\s+- output mismatch/, # btrfs/158 - output mismatch (see /lkp/benchmarks/xfstests/results//btrfs/158.out.bad)
       /^#{TEST_PATTERN}\s+_check_dmesg: something found in dmesg/, # xfs/385 _check_dmesg: something found in dmesg (see /lkp/benchmarks/xfstests/results//xfs/385.dmesg)
       /^_check_generic_filesystem: filesystem on .+ is inconsistent \(see .+\/([a-z]+)\/([0-9]+)\.full\)/,
       /^#{TEST_PATTERN}\s+_check.+: filesystem on .+ is inconsistent/ # btrfs/002 _check_btrfs_filesystem: filesystem on /dev/sda2 is inconsistent
    stats.add "#{$1}.#{$2}", 'fail'
  when /^#{TEST_PATTERN}\s+\[not run\]/
    # xfs/161 [not run] Assuming DMAPI modules are not loaded
    stats.add "#{$1}.#{$2}", 'skip'
  when /^#{TEST_PATTERN}\s+\[expunged\]/
    # generic/387       [expunged]
    stats.add "#{$1}.#{$2}", 'expunged'
  when /^#{TEST_PATTERN}\s+(\d+)s/
    # btrfs/011        3434s
    stats.add "#{$1}.#{$2}", 'pass'
  end
end

stats.dump
